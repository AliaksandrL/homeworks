{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","fon","avatar","src","alt","message","name","time","messageData","HW1","Affair","onClick","deleteAffairCallback","affair","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","itm","filterAffairs","value","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnter","inputClass","errorInput","input","greeting","onChange","onKeyPress","onBlur","button","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","trim","key","HW3","v1","setUsers","user","SuperInputText","type","onChangeText","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","btn","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.13fff514.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting___SowO\",\"error\":\"Greeting_error__3IwXa\",\"input\":\"Greeting_input__3etzh\",\"ddd\":\"Greeting_ddd___YinE\",\"errorInput\":\"Greeting_errorInput__1UBIR\",\"button\":\"Greeting_button__33Muj\",\"count\":\"Greeting_count__3JX_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__eh482\",\"avatar\":\"Message_avatar__3K0oz\",\"fon\":\"Message_fon__1noMx\",\"time\":\"Message_time__2M1bR\",\"name\":\"Message_name__2RuFp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2mK6T\",\"superInput\":\"SuperInputText_superInput__X7WXG\",\"errorInput\":\"SuperInputText_errorInput__3W28F\",\"error\":\"SuperInputText_error__8eobK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1J9-t\",\"red\":\"SuperButton_red__1gmda\",\"btn\":\"SuperButton_btn__1pOuY\",\"glass-effect\":\"SuperButton_glass-effect__3rdlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__j8406\",\"column\":\"HW4_column__-8DMj\",\"testSpanError\":\"HW4_testSpanError__3M-ZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__25ufI\",\"spanClassName\":\"SuperCheckbox_spanClassName__2Ap99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1mcd6\"};","import React from 'react'\nimport s from './Message.module.css'\n\ntype PropsType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\n\nexport const Message = (props: PropsType) => {\n    return (\n        <div className={s.fon}>\n            <img className={s.avatar} src={props.avatar} alt=\"avater\"/>\n            <div className={s.message}>\n                <div className={s.name}>{props.name}</div>\n                <div>{props.message}</div>\n                <div className={s.time}>{props.time}</div>\n            </div>\n        </div>\n\n    )\n}\n","import React from 'react';\nimport {Message} from \"./Message\";\n\nlet messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Harry Potter',\n    message: 'I have a stick',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n    return (\n        <div>\n            <button onClick={deleteCallback}>X</button>\n            {props.affair.name}\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, filterAffairs, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (valueFilter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: FilterType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter(itm => itm.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(value => value._id !== _id) // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    // const setFilterF = (valueFilter: FilterType) => {\n    //     setFilter(valueFilter)\n    // }\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                // setFilter={setFilterF}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    const inputClass = s.error ? s.errorInput : s.input; // need to fix with (?:)\n\n    return (\n        <div className={s.greeting}>\n            <div>\n            <input\n                value={name}\n                onChange={setNameCallback}\n                className={inputClass}\n                onKeyPress={onEnter}\n                onBlur={setNameCallback}\n            />\n            <div className={s.error}>{error}</div>\n            </div>\n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\n            <span className={s.count}>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {KeyboardEvent, ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\") // need to fix any\n    const [error, setError] = useState<string>(\"\") // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const trimmedName = e.currentTarget.value.trim()\n        if (trimmedName) {\n            setName(trimmedName);\n            error && setError('')\n        } else {\n            name && setName('')\n            setError('no name')\n        }\n        // need to fix\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name}!`) // need to fix\n        setName('')\n    }\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\" && name) {\n            addUser()\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onEnter={onEnter}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([\n        {_id: v1(), name: 'Sasha'},\n        {_id: v1(), name: 'Masha'},\n        {_id: v1(), name: 'Gari'},\n        {_id: v1(), name: 'Nasty'},\n        {_id: v1(), name: 'Valera'},\n    ]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const user = {_id: v1(), name}\n        setUsers([...users, user])\n        // if (name.trim() !== '') {\n        //     let user = {_id: v1(), name: name.trim()}\n        //     let newUsers = [user, ...users];\n        //     setUsers(newUsers)// need to fix\n        // }\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer\n                users={users}\n                addUserCallback={addUserCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value.trim())\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.btn} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}